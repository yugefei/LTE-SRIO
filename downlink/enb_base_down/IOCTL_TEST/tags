!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
IOCCMD_USTORRC_CELL_ACCESS	rrc_test.h	7;"	d	language:C++
IOCCMD_USTORRC_CONN_RECONFIG	rrc_test.c	20;"	d	language:C	file:
IOCCMD_USTORRC_RRC_CONN_RELEASE	rrc_test.c	22;"	d	language:C	file:
IOCCMD_USTORRC_RRC_CONN_REQ	rrc_test.h	9;"	d	language:C++
Ioctl_Msg_Rrc_Enb	rrc_test.c	/^struct Ioctl_Msg_Rrc_Enb {$/;"	s	language:C	file:
MAX_IOCTL_DATA_LEN	rrc_test.c	10;"	d	language:C	file:
PSEND_INTERVAL	srio.h	5;"	d	language:C++
PSEND_RUN	srio.h	3;"	d	language:C++
PSEND_STOP	srio.h	4;"	d	language:C++
USERIOCCMD	rrc_test.h	1;"	d	language:C++
USERIOCCMD	srio.h	1;"	d	language:C++
cmd	rrc_test.h	/^	unsigned int cmd;$/;"	m	language:C++	struct:kifreq
cmd	srio.h	/^	unsigned char cmd;$/;"	m	language:C++	struct:kifreq
crnti	rrc_test.c	/^	unsigned short crnti;$/;"	m	language:C	struct:Ioctl_Msg_Rrc_Enb	file:
data	rrc_test.c	/^	char data[MAX_IOCTL_DATA_LEN]; $/;"	m	language:C	struct:Ioctl_Msg_Rrc_Enb	file:
data_len	rrc_test.c	/^	unsigned int data_len;$/;"	m	language:C	struct:Ioctl_Msg_Rrc_Enb	file:
data_ptr	rrc_test.h	/^	void* data_ptr;$/;"	m	language:C++	struct:kifreq
data_ptr	srio.h	/^	void* data_ptr;$/;"	m	language:C++	struct:kifreq
kifreq	rrc_test.h	/^struct kifreq$/;"	s	language:C++
kifreq	srio.h	/^struct kifreq$/;"	s	language:C++
main	rrc_test.c	/^int main(int argc, char *argv[])$/;"	f	language:C	signature:(int argc, char *argv[])
main	srio.c	/^int main(int argc, char *argv[])$/;"	f	language:C	signature:(int argc, char *argv[])
periodical_send_interval	srio.c	/^void periodical_send_interval(struct kifreq* ifr_ptr, float interval)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr, float interval)
periodical_send_run	srio.c	/^void periodical_send_run(struct kifreq* ifr_ptr)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr)
periodical_send_stop	srio.c	/^void periodical_send_stop(struct kifreq* ifr_ptr)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr)
rrc_conn_req	rrc_test.c	/^void rrc_conn_req(struct kifreq* ifr_ptr)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr)
size	rrc_test.h	/^	size_t size;$/;"	m	language:C++	struct:kifreq
size	srio.h	/^	unsigned short	size;$/;"	m	language:C++	struct:kifreq
start_cell_access	rrc_test.c	/^void start_cell_access(struct kifreq* ifr_ptr)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr)
start_rrc_reconfig	rrc_test.c	/^void start_rrc_reconfig(struct kifreq* ifr_ptr, unsigned short crnti, const char *data)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr, unsigned short crnti, const char *data)
start_rrc_release	rrc_test.c	/^void start_rrc_release(struct kifreq* ifr_ptr, unsigned short crnti, const char *data)$/;"	f	language:C	signature:(struct kifreq* ifr_ptr, unsigned short crnti, const char *data)
usage	rrc_test.c	/^void usage(void)$/;"	f	language:C	signature:(void)
usage	srio.c	/^void usage(void)$/;"	f	language:C	signature:(void)
